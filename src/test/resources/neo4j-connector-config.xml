<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:neo4j="http://www.mulesoft.org/schema/mule/neo4j"
    xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
        http://www.mulesoft.org/schema/mule/neo4j http://www.mulesoft.org/schema/mule/neo4j/current/mule-neo4j.xsd
        http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">

    <neo4j:config name="neo4j" />

    <flow name="test">
        <vm:inbound-endpoint path="test.in"
            exchange-pattern="request-response" />

        <neo4j:get-service-root />
        <set-variable variableName="serviceRoot" value="#[message.payload]" />
        <logger level="INFO" category="neo4j.tests" message="Service root: #[serviceRoot]" />

        <neo4j:run-cypher-query
            query="start x  = node(0) match x -[r]-> n return type(r)" />
        <logger level="INFO" category="neo4j.tests"
            message="Run Cypher Query: #[message.payload]" />

        <neo4j:run-cypher-query
            query="start x  = node({startNodeId}) match x -[r]-> n return type(r)">
            <neo4j:params>
                <neo4j:param key="startNodeId" value-ref="#[0]" />
            </neo4j:params>
        </neo4j:run-cypher-query>
        <logger level="INFO" category="neo4j.tests"
            message="Run Cypher Query with Params: #[message.payload]" />

        <neo4j:get-node-by-id nodeId="0" />
        <logger level="INFO" category="neo4j.tests"
            message="Get Node by ID: #[message.payload]" />

        <neo4j:get-node-by-id nodeId="37800000" />
        <logger level="INFO" category="neo4j.tests"
            message="Get Node by ID (not found): #[message.payload]" />

        <neo4j:get-node-by-id nodeId="0" failIfNotFound="true" />
        <logger level="INFO" category="neo4j.tests"
            message="Get Node by ID (fail if not found): #[message.payload]" />

        <neo4j:create-node />
        <logger level="INFO" category="neo4j.tests" message="Create Node: #[message.payload]" />

        <set-variable variableName="firstNode" value="#[message.payload]" />

        <neo4j:set-node-properties node-ref="#[firstNode]">
            <neo4j:properties>
                <neo4j:property key="pi" value-ref="#[Math.PI]" />
                <neo4j:property key="chords">EADGBE</neo4j:property>
            </neo4j:properties>
        </neo4j:set-node-properties>

        <neo4j:delete-node-properties node-ref="#[firstNode]" />

        <neo4j:create-node>
            <neo4j:properties>
                <neo4j:property key="foo">bar</neo4j:property>
            </neo4j:properties>
        </neo4j:create-node>
        <logger level="INFO" category="neo4j.tests"
            message="Create Node with Properties: #[message.payload]" />

        <set-variable variableName="secondNode" value="#[message.payload]" />

        <neo4j:set-node-property node-ref="#[secondNode]"
            key="pi" value-ref="#[Math.PI]" />

        <neo4j:delete-node-property node-ref="#[secondNode]"
            key="pi" failIfNotFound="true" />
        <neo4j:delete-node-property node-ref="#[secondNode]"
            key="pi" />

        <neo4j:create-relationship-by-ids
            fromNodeId="#[firstNode.id]" toNodeId="#[secondNode.id]" type="first" />
        <logger level="INFO" category="neo4j.tests"
            message="Create Relationship by IDs: #[message.payload]" />

        <set-variable variableName="firstRelationship" value="#[message.payload]" />

        <neo4j:get-relationship-by-id
            relationshipId="#[firstRelationship.id]" />
        <logger level="INFO" category="neo4j.tests"
            message="Get Relationship by ID: #[message.payload]" />

        <neo4j:get-relationship-by-id
            relationshipId="37800000" />
        <logger level="INFO" category="neo4j.tests"
            message="Get Relationship by ID (not found): #[message.payload]" />

        <neo4j:get-relationship-by-id
            relationshipId="#[firstRelationship.id]" failIfNotFound="true" />
        <logger level="INFO" category="neo4j.tests"
            message="Get Relationship by ID (fail if not found): #[message.payload]" />

        <neo4j:create-relationship fromNode-ref="#[firstNode]"
            toNode-ref="#[secondNode]" type="second">
            <neo4j:properties>
                <neo4j:property key="foo">bar</neo4j:property>
            </neo4j:properties>
        </neo4j:create-relationship>
        <logger level="INFO" category="neo4j.tests"
            message="Create Relationship: #[message.payload]" />

        <set-variable variableName="secondRelationship" value="#[message.payload]" />

        <neo4j:get-node-relationships node-ref="#[firstNode]"
            direction="ALL" />
        <logger level="INFO" category="neo4j.tests"
            message="Get ALL Node Relationships: #[message.payload]" />

        <neo4j:get-node-relationships node-ref="#[firstNode]"
            direction="OUT" />
        <logger level="INFO" category="neo4j.tests"
            message="Get OUTGOING Node Relationships: #[message.payload]" />

        <neo4j:get-node-relationships node-ref="#[firstNode]"
            direction="IN" />
        <logger level="INFO" category="neo4j.tests"
            message="Get INCOMING Node Relationships: #[message.payload]" />

        <neo4j:get-node-relationships node-ref="#[secondNode]"
            direction="ALL">
            <neo4j:types>
                <neo4j:type>first</neo4j:type>
                <neo4j:type>second</neo4j:type>
            </neo4j:types>
        </neo4j:get-node-relationships>
        <logger level="INFO" category="neo4j.tests"
            message="Get ALL Node Relationships with Multiple Types: #[message.payload]" />

        <neo4j:get-node-relationships node-ref="#[secondNode]"
            direction="OUT">
            <neo4j:types>
                <neo4j:type>second</neo4j:type>
            </neo4j:types>
        </neo4j:get-node-relationships>
        <logger level="INFO" category="neo4j.tests"
            message="Get OUTGOING Node Relationships with Single Type: #[message.payload]" />

        <neo4j:get-node-relationships node-ref="#[secondNode]"
            direction="IN">
            <neo4j:types>
                <neo4j:type>second</neo4j:type>
            </neo4j:types>
        </neo4j:get-node-relationships>
        <logger level="INFO" category="neo4j.tests"
            message="Get INCOMING Node Relationships with Single Type: #[message.payload]" />

        <neo4j:set-relationship-property
            relationship-ref="#[firstRelationship]" key="pi" value-ref="#[Math.PI]" />

        <neo4j:get-relationship-by-id
            relationshipId="#[firstRelationship.id]" failIfNotFound="true" />
        <logger level="INFO" category="neo4j.tests"
            message="Set Relationship Property: #[message.payload.data]" />

        <neo4j:delete-relationship-property
            relationship-ref="#[firstRelationship]" key="pi" />

        <neo4j:set-relationship-properties
            relationship-ref="#[secondRelationship]">
            <neo4j:properties>
                <neo4j:property key="pi" value-ref="#[Math.PI]" />
                <neo4j:property key="chords">EADGBE</neo4j:property>
            </neo4j:properties>
        </neo4j:set-relationship-properties>

        <neo4j:get-relationship-by-id
            relationshipId="#[secondRelationship.id]" failIfNotFound="true" />
        <logger level="INFO" category="neo4j.tests"
            message="Set Relationship Properties: #[message.payload.data]" />

        <neo4j:delete-relationship-properties
            relationship-ref="#[secondRelationship]" />

        <neo4j:traverse-for-nodes node-ref="#[firstNode]"
            order="BREADTH_FIRST" maxDepth="3" uniqueness="NODE_GLOBAL">
            <neo4j:relationships>
                <neo4j:relationship direction="ALL" type="first" />
                <neo4j:relationship direction="ALL" type="second" />
            </neo4j:relationships>
            <neo4j:return-filter language="javascript"
                body="position.length() &lt; 3;" />
            <neo4j:prune-evaluator language="builtin"
                name="none" />
        </neo4j:traverse-for-nodes>
        <logger level="INFO" category="neo4j.tests"
            message="Traverse for Nodes: #[message.payload]" />

        <neo4j:traverse-for-relationships
            node-ref="#[firstNode]" order="BREADTH_FIRST" maxDepth="3"
            uniqueness="NODE_GLOBAL">
            <neo4j:relationships>
                <neo4j:relationship direction="ALL" type="first" />
                <neo4j:relationship direction="ALL" type="second" />
            </neo4j:relationships>
            <neo4j:return-filter language="javascript"
                body="position.length() &lt; 3;" />
            <neo4j:prune-evaluator language="builtin"
                name="none" />
        </neo4j:traverse-for-relationships>
        <logger level="INFO" category="neo4j.tests"
            message="Traverse for Relationships: #[message.payload]" />

        <neo4j:traverse-for-paths node-ref="#[firstNode]"
            order="BREADTH_FIRST" maxDepth="3" uniqueness="NODE_GLOBAL">
            <neo4j:relationships>
                <neo4j:relationship direction="ALL" type="first" />
                <neo4j:relationship direction="ALL" type="second" />
            </neo4j:relationships>
            <neo4j:return-filter language="javascript"
                body="position.length() &lt; 3;" />
            <neo4j:prune-evaluator language="builtin"
                name="none" />
        </neo4j:traverse-for-paths>
        <logger level="INFO" category="neo4j.tests"
            message="Traverse for Paths: #[message.payload]" />

        <neo4j:traverse-for-fullpaths node-ref="#[firstNode]"
            order="BREADTH_FIRST" maxDepth="3" uniqueness="NODE_GLOBAL">
            <neo4j:relationships>
                <neo4j:relationship direction="ALL" type="first" />
                <neo4j:relationship direction="ALL" type="second" />
            </neo4j:relationships>
            <neo4j:return-filter language="javascript"
                body="position.length() &lt; 3;" />
            <neo4j:prune-evaluator language="builtin"
                name="none" />
        </neo4j:traverse-for-fullpaths>
        <logger level="INFO" category="neo4j.tests"
            message="Traverse for Full Paths: #[message.payload]" />

        <flow-ref name="traverseForNodesWithPaging" />
        <flow-ref name="traverseForRelationshipsWithPaging" />
        <flow-ref name="traverseForPathsWithPaging" />
        <flow-ref name="traverseForFullpathsWithPaging" />

        <neo4j:traverse-for-path-with-algorithm
            fromNode-ref="#[firstNode]" toNode-ref="#[secondNode]" algorithm="SHORTEST_PATH"
            relationshipType="second" maxDepth="3" failIfNotFound="true" />
        <logger level="INFO" category="neo4j.tests"
            message="Traverse For Path With Algorithm: #[message.payload]" />

        <neo4j:traverse-for-path-with-algorithm
            fromNode-ref="#[firstNode]" toNode-ref="#[secondNode]" algorithm="SHORTEST_PATH"
            relationshipType="missing" maxDepth="3" />
        <logger level="INFO" category="neo4j.tests"
            message="Traverse For Path With Algorithm (Not Found): #[message.payload]" />

        <neo4j:traverse-for-paths-with-algorithm
            fromNode-ref="#[firstNode]" toNode-ref="#[secondNode]" algorithm="SHORTEST_PATH"
            relationshipType="second" maxDepth="3" />
        <logger level="INFO" category="neo4j.tests"
            message="Traverse For Paths With Algorithm: #[message.payload]" />

        <neo4j:traverse-for-paths-with-algorithm
            fromNode-ref="#[firstNode]" toNode-ref="#[secondNode]" algorithm="SHORTEST_PATH"
            relationshipType="missing" maxDepth="3" />
        <logger level="INFO" category="neo4j.tests"
            message="Traverse For Paths With Algorithm (Nothing Found): #[message.payload]" />

        <neo4j:delete-relationship relationship-ref="#[secondRelationship]"
            failIfNotFound="true" />
        <logger level="INFO" category="neo4j.tests"
            message="Delete Relationship (fail if not found): #[message.payload]" />

        <neo4j:delete-relationship relationship-ref="#[secondRelationship]" />
        <logger level="INFO" category="neo4j.tests"
            message="Delete Relationship: #[message.payload]" />

        <choice>
            <when expression="#[serviceRoot.neo4jVersion &lt; '2']">
                <logger level="DEBUG" message="NOOP" />
            </when>
            <otherwise>
                <flow-ref name="version2Tests" />
            </otherwise>
        </choice>

        <set-variable variableName="randomNodeIndexName"
            value="#[UUID.randomUUID().toString()]" />

        <neo4j:create-node-index indexName="#[randomNodeIndexName]" />
        <logger level="INFO" category="neo4j.tests"
            message="Create Node Index: #[message.payload]" />

        <neo4j:create-node-index indexName="#[randomNodeIndexName]"
            type="exact" provider="lucene" />
        <logger level="INFO" category="neo4j.tests"
            message="Create Node Index with Configuration: #[message.payload]" />

        <neo4j:get-node-indexes />
        <logger level="INFO" category="neo4j.tests"
            message="Get Node Indexes: #[message.payload]" />

        <neo4j:add-node-to-index indexName="#[randomNodeIndexName]"
            node-ref="#[firstNode]" key="aKey" value="aValue" />
        <logger level="INFO" category="neo4j.tests"
            message="Add Node to Index: #[message.payload]" />

        <neo4j:find-nodes-by-index indexName="#[randomNodeIndexName]"
            key="aKey" value="aValue" />
        <logger level="INFO" category="neo4j.tests"
            message="Find Nodes by Index: #[message.payload]" />

        <neo4j:find-nodes-by-query indexName="#[randomNodeIndexName]"
            query="not:found" />
        <logger level="INFO" category="neo4j.tests"
            message="Find Nodes by Query (No Result): #[message.payload]" />

        <neo4j:find-nodes-by-query indexName="#[randomNodeIndexName]"
            query="aKey:aValue" />
        <logger level="INFO" category="neo4j.tests"
            message="Find Nodes by Query: #[message.payload]" />

        <neo4j:find-nodes-by-query indexName="#[randomNodeIndexName]"
            query="aKey:aValue" order="RELEVANCE" />
        <logger level="INFO" category="neo4j.tests"
            message="Find Nodes by Query (with Order): #[message.payload]" />

        <neo4j:remove-node-index-entries
            indexName="#[randomNodeIndexName]" node-ref="#[firstNode]" key="aKey"
            value="aValue" />
        <neo4j:remove-node-index-entries
            indexName="#[randomNodeIndexName]" node-ref="#[firstNode]" key="aKey"
            failIfNotFound="false" />
        <neo4j:remove-node-index-entries
            indexName="#[randomNodeIndexName]" node-ref="#[firstNode]"
            failIfNotFound="false" />

        <neo4j:delete-relationship-by-id
            relationshipId="#[firstRelationship.id]" failIfNotFound="true" />
        <logger level="INFO" category="neo4j.tests"
            message="Delete Relationship by ID (fail if not found): #[message.payload]" />
        <neo4j:delete-relationship-by-id
            relationshipId="#[firstRelationship.id]" />
        <logger level="INFO" category="neo4j.tests"
            message="Delete Relationship by ID: #[message.payload]" />

        <neo4j:delete-node-index indexName="#[randomNodeIndexName]"
            failIfNotFound="true" />
        <neo4j:delete-node-index indexName="#[randomNodeIndexName]" />

        <neo4j:get-node-indexes />
        <logger level="INFO" category="neo4j.tests"
            message="Get Node Indexes (after delete): #[message.payload]" />

        <neo4j:delete-node-by-id nodeId="#[firstNode.id]"
            failIfNotFound="true" />
        <logger level="INFO" category="neo4j.tests" message="Delete Node Id: #[firstNode.id]" />
        <neo4j:delete-node-by-id nodeId="#[firstNode.id]" />

        <neo4j:delete-node node-ref="#[secondNode]"
            failIfNotFound="true" />
        <logger level="INFO" category="neo4j.tests" message="Delete Node: #[secondNode]" />
        <neo4j:delete-node node-ref="#[secondNode]" />

        <neo4j:get-relationship-types />
        <logger level="INFO" category="neo4j.tests"
            message="Get Relationship Types: #[message.payload]" />
    </flow>

    <flow name="version2Tests" processingStrategy="synchronous">
        <neo4j:add-node-label node-ref="#[firstNode]"
            label="firstLabel" />

        <neo4j:add-node-labels node-ref="#[secondNode]">
            <neo4j:labels>
                <neo4j:label>secondLabelA</neo4j:label>
                <neo4j:label>secondLabelB</neo4j:label>
            </neo4j:labels>
        </neo4j:add-node-labels>

        <neo4j:set-node-labels node-ref="#[secondNode]">
            <neo4j:labels>
                <neo4j:label>secondLabelB</neo4j:label>
                <neo4j:label>secondLabelC</neo4j:label>
            </neo4j:labels>
        </neo4j:set-node-labels>

        <neo4j:delete-node-label node-ref="#[secondNode]"
            label="secondLabelC" />

        <neo4j:get-node-labels node-ref="#[secondNode]" />
        <logger level="INFO" category="neo4j.tests"
            message="Get Node Labels: #[message.payload]" />

        <neo4j:get-nodes-by-label label="secondLabelB" />
        <logger level="INFO" category="neo4j.tests"
            message="Get Nodes By Label: #[message.payload]" />

        <neo4j:get-nodes-by-label label="secondLabelB"
            propertyName="foo" propertyValue-ref="#['bar']" />
        <logger level="INFO" category="neo4j.tests"
            message="Get Nodes By Label And Property: #[message.payload]" />

        <neo4j:get-nodes-by-label label="missing" />
        <logger level="INFO" category="neo4j.tests"
            message="Get Nodes By Label And Property (Not Found): #[message.payload] - isEmpty?: #[message.payload.empty]" />

        <neo4j:get-labels />
        <logger level="INFO" category="neo4j.tests" message="Get Labels: #[message.payload]" />

        <set-variable variableName="randomPropertyKey"
            value="#[UUID.randomUUID().toString()]" />

        <neo4j:create-schema-index label="firstLabel">
            <neo4j:property-keys>
                <neo4j:property-key>#[randomPropertyKey]</neo4j:property-key>
            </neo4j:property-keys>
        </neo4j:create-schema-index>
        <logger level="INFO" category="neo4j.tests"
            message="Create Schema Index: #[message.payload]" />

        <neo4j:get-schema-indexes label="firstLabel" />
        <logger level="INFO" category="neo4j.tests"
            message="Get Schema Indexes: #[message.payload]" />

        <neo4j:delete-schema-index label="firstLabel"
            propertyKey="#[randomPropertyKey]" failIfNotFound="true" />
        <neo4j:delete-schema-index label="firstLabel"
            propertyKey="#[randomPropertyKey]" />
    </flow>

    <flow name="traverseForNodesWithPaging" processingStrategy="synchronous">
        <neo4j:traverse-for-nodes-with-paging
            node-ref="#[firstNode]" order="BREADTH_FIRST" maxDepth="3"
            uniqueness="NODE_GLOBAL" pageSize="1">
            <neo4j:relationships>
                <neo4j:relationship direction="ALL" type="first" />
                <neo4j:relationship direction="ALL" type="second" />
            </neo4j:relationships>
            <neo4j:return-filter language="javascript"
                body="position.length() &lt; 3;" />
            <neo4j:prune-evaluator language="builtin"
                name="none" />
        </neo4j:traverse-for-nodes-with-paging>
        <logger level="INFO" category="neo4j.tests"
            message="Traverse for Nodes With Paging: #[message.payload]" />
    </flow>

    <flow name="traverseForRelationshipsWithPaging" processingStrategy="synchronous">
        <neo4j:traverse-for-relationships-with-paging
            node-ref="#[firstNode]" order="BREADTH_FIRST" maxDepth="3"
            uniqueness="NODE_GLOBAL" pageSize="1">
            <neo4j:relationships>
                <neo4j:relationship direction="ALL" type="first" />
                <neo4j:relationship direction="ALL" type="second" />
            </neo4j:relationships>
            <neo4j:return-filter language="javascript"
                body="position.length() &lt; 3;" />
            <neo4j:prune-evaluator language="builtin"
                name="none" />
        </neo4j:traverse-for-relationships-with-paging>
        <logger level="INFO" category="neo4j.tests"
            message="Traverse for Relationships With Paging: #[message.payload]" />
    </flow>

    <flow name="traverseForPathsWithPaging" processingStrategy="synchronous">
        <neo4j:traverse-for-paths-with-paging
            node-ref="#[firstNode]" order="BREADTH_FIRST" maxDepth="3"
            uniqueness="NODE_GLOBAL" pageSize="1">
            <neo4j:relationships>
                <neo4j:relationship direction="ALL" type="first" />
                <neo4j:relationship direction="ALL" type="second" />
            </neo4j:relationships>
            <neo4j:return-filter language="javascript"
                body="position.length() &lt; 3;" />
            <neo4j:prune-evaluator language="builtin"
                name="none" />
        </neo4j:traverse-for-paths-with-paging>
        <logger level="INFO" category="neo4j.tests"
            message="Traverse for Paths With Paging: #[message.payload]" />
    </flow>

    <flow name="traverseForFullpathsWithPaging" processingStrategy="synchronous">
        <neo4j:traverse-for-fullpaths-with-paging
            node-ref="#[firstNode]" order="BREADTH_FIRST" maxDepth="3"
            uniqueness="NODE_GLOBAL" pageSize="1">
            <neo4j:relationships>
                <neo4j:relationship direction="ALL" type="first" />
                <neo4j:relationship direction="ALL" type="second" />
            </neo4j:relationships>
            <neo4j:return-filter language="javascript"
                body="position.length() &lt; 3;" />
            <neo4j:prune-evaluator language="builtin"
                name="none" />
        </neo4j:traverse-for-fullpaths-with-paging>
        <logger level="INFO" category="neo4j.tests"
            message="Traverse for Fullpaths With Paging: #[message.payload]" />
    </flow>
</mule>