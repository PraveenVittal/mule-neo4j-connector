<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:neo4j="http://www.mulesoft.org/schema/mule/neo4j" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/neo4j http://www.mulesoft.org/schema/mule/neo4j/current/mule-neo4j.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
    <http:listener-config name="HTTP_Listener_Configuration" host="localhost" port="8081" doc:name="HTTP Listener Configuration"/>
    <neo4j:config name="Neo4j__Configuration" username="${config.username}" password="${config.password}" boltUrl="${config.boltUrl}" doc:name="Neo4j: Configuration" restUrl="${config.restUrl}"/>
    <flow name="createNode">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/createNode" doc:name="HTTP"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	"name" : inboundProperties."http.query.params".name,
	"born" : inboundProperties."http.query.params".born
	
}
]]></dw:set-payload>
        </dw:transform-message>
        <neo4j:create-node config-ref="Neo4j__Configuration" label="Person" parameters-ref="#[payload]" doc:name="Neo4j"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="selectNode">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/selectNode" doc:name="HTTP"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	name:inboundProperties."http.query.params".name
}]]></dw:set-payload>
        </dw:transform-message>
        <neo4j:select-nodes config-ref="Neo4j__Configuration" label="Person" parameters-ref="#[payload]" doc:name="Neo4j"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="updateNode">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/updateNode" doc:name="HTTP"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-variable variableName="existing"><![CDATA[%dw 1.0
%output application/java
---
{
	"name":inboundProperties."http.query.params".name,
	"born":inboundProperties."http.query.params".born
}]]></dw:set-variable>
            <dw:set-variable variableName="modified"><![CDATA[%dw 1.0
%output application/java
---
{
	"born":inboundProperties."http.query.params".newborn
}]]></dw:set-variable>
        </dw:transform-message>
        <neo4j:update-nodes config-ref="Neo4j__Configuration" label="Person" parameters-ref="#[flowVars.existing]" setParameters-ref="#[flowVars.modified]" doc:name="Neo4j"/>
    </flow>
    <flow name="deleteNode">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/deleteNode" doc:name="HTTP"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	"name" : inboundProperties."http.query.params".name,
	"born" : inboundProperties."http.query.params".born
	
}
]]></dw:set-payload>
        </dw:transform-message>
        <neo4j:delete-nodes config-ref="Neo4j__Configuration" label="Person" parameters-ref="#[payload]" doc:name="Neo4j"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="getMovies">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/getMovies" doc:name="HTTP"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	
	"released":inboundProperties."http.query.params".year
	
}]]></dw:set-payload>
        </dw:transform-message>
        <neo4j:select-nodes config-ref="Neo4j__Configuration" label="Movie" parameters-ref="#[payload]" doc:name="Neo4j"/>
        <object-to-string-transformer doc:name="Object to String"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="getNinetiesMovies">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/getNinetiesMovies" doc:name="HTTP"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-variable variableName="query"><![CDATA[%dw 1.0
%output application/java
---
"MATCH (nineties:Movie) WHERE nineties.released > {startYear} AND nineties.released < {endYear} RETURN nineties.title"]]></dw:set-variable>
            <dw:set-variable variableName="parameters"><![CDATA[%dw 1.0
%output application/java
---
{
	    "startYear" : inboundProperties."http.query.params".startyear as :number,
	    "endYear" : inboundProperties."http.query.params".endyear as :number

}]]></dw:set-variable>
        </dw:transform-message>
        <neo4j:execute config-ref="Neo4j__Configuration" query="#[flowVars.query]" parameters-ref="#[flowVars.parameters]" doc:name="Neo4j"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="getMoviesForActor">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/getMoviesForActor" doc:name="HTTP"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-variable variableName="query"><![CDATA[%dw 1.0
%output application/java
---
"MATCH (actor:Person {name: {actor}})-[:ACTED_IN]->(movies) RETURN actor,movies"]]></dw:set-variable>
            <dw:set-variable variableName="parameters"><![CDATA[%dw 1.0
%output application/java
---
{
	    "actor" : inboundProperties."http.query.params".name
}]]></dw:set-variable>
        </dw:transform-message>
        <neo4j:execute config-ref="Neo4j__Configuration" query="#[flowVars.query]" parameters-ref="#[flowVars.parameters]" doc:name="Neo4j"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>    
        <flow name="getRecommendations">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/getRecommendations" doc:name="HTTP"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-variable variableName="query"><![CDATA[%dw 1.0
%output application/java
---
"MATCH (actor:Person {name:{actor}})-[:ACTED_IN]->(m)<-[:ACTED_IN]-(coActors),
      (coActors)-[:ACTED_IN]->(m2)<-[:ACTED_IN]-(cocoActors)
WHERE NOT (actor)-[:ACTED_IN]->()<-[:ACTED_IN]-(cocoActors) AND actor <> cocoActors
RETURN cocoActors.name AS Recommended, count(*) AS Strength ORDER BY Strength DESC"
]]></dw:set-variable>
            <dw:set-variable variableName="parameters"><![CDATA[%dw 1.0
%output application/java
---
{
	    "actor" : inboundProperties."http.query.params".name
}]]></dw:set-variable>
        </dw:transform-message>
        <neo4j:execute config-ref="Neo4j__Configuration" query="#[flowVars.query]" parameters-ref="#[flowVars.parameters]" doc:name="Neo4j"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>   
    
</mule>
