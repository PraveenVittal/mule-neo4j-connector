<!-- BEGIN_INCLUDE(neo4j:config-no-auth) -->
<neo4j:config />
<!-- END_INCLUDE(neo4j:config-no-auth) -->

<!-- BEGIN_INCLUDE(neo4j:config-auth) -->
<neo4j:config user="a_user" password="@_p@$$w0rd" />
<!-- END_INCLUDE(neo4j:config-auth) -->


<!-- BEGIN_INCLUDE(neo4j:getServiceRoot) -->
<neo4j:get-service-root />
<!-- END_INCLUDE(neo4j:getServiceRoot) -->

<!-- BEGIN_INCLUDE(neo4j:runCypherQuery) -->
<neo4j:run-cypher-query>
    <neo4j:cypher-query query="start x = node(0) match x -[r]-> n return type(r)" />
</neo4j:run-cypher-query>
<!-- END_INCLUDE(neo4j:runCypherQuery) -->

<!-- BEGIN_INCLUDE(neo4j:getNodeById) -->
<neo4j:get-node-by-id nodeId="37800000" />
<!-- END_INCLUDE(neo4j:getNodeById) -->
<!-- BEGIN_INCLUDE(neo4j:getNodeById-failIfNotFound) -->
<neo4j:get-node-by-id nodeId="37800000" failIfNotFound="true" />
<!-- END_INCLUDE(neo4j:getNodeById-failIfNotFound) -->

<!-- BEGIN_INCLUDE(neo4j:createNode) -->
<neo4j:create-node />
<!-- END_INCLUDE(neo4j:createNode) -->
<!-- BEGIN_INCLUDE(neo4j:createNode-withProperties) -->
<neo4j:create-node>
    <neo4j:properties>
        <neo4j:property key="foo">bar</neo4j:property>
    </neo4j:properties>
</neo4j:create-node>
<!-- END_INCLUDE(neo4j:createNode-withProperties) -->

<!-- BEGIN_INCLUDE(neo4j:deleteNodeById) -->
<neo4j:delete-node-by-id nodeId="37800000" />
<!-- END_INCLUDE(neo4j:deleteNodeById) -->
<!-- BEGIN_INCLUDE(neo4j:deleteNodeById-failIfNotFound) -->
<neo4j:delete-node-by-id nodeId="37800000" failIfNotFound="true" />
<!-- END_INCLUDE(neo4j:deleteNodeById-failIfNotFound) -->

<!-- BEGIN_INCLUDE(neo4j:deleteNode) -->
<neo4j:delete-node node-ref="#[message.payload]" />
<!-- END_INCLUDE(neo4j:deleteNode) -->
<!-- BEGIN_INCLUDE(neo4j:deleteNode-failIfNotFound) -->
<neo4j:delete-node node-ref="#[message.payload]" failIfNotFound="true" />
<!-- END_INCLUDE(neo4j:deleteNode-failIfNotFound) -->

<!-- BEGIN_INCLUDE(neo4j:getRelationshipById) -->
<neo4j:get-relationship-by-id relationshipId="1" />
<!-- END_INCLUDE(neo4j:getRelationshipById) -->
<!-- BEGIN_INCLUDE(neo4j:getRelationshipById-failIfNotFound) -->
<neo4j:get-relationship-by-id relationshipId="1" failIfNotFound="true" />
<!-- END_INCLUDE(neo4j:getRelationshipById-failIfNotFound) -->

<!-- BEGIN_INCLUDE(neo4j:createRelationshipByIds) -->
<neo4j:create-relationship-by-ids fromNodeId="1" toNodeId="2" type="test" />
<!-- END_INCLUDE(neo4j:createRelationshipByIds) -->
<!-- BEGIN_INCLUDE(neo4j:createRelationshipByIds-withProperties) -->
<neo4j:create-relationship-by-ids fromNodeId="1" toNodeId="2" type="test">
    <neo4j:properties>
        <neo4j:property key="foo">bar</neo4j:property>
    </neo4j:properties>
</neo4j:create-relationship-by-ids>
<!-- END_INCLUDE(neo4j:createRelationshipByIds-withProperties) -->

<!-- BEGIN_INCLUDE(neo4j:createRelationship) -->
<neo4j:create-relationship fromNode-ref="#[sourceNode]" toNode-ref="#[targetNode]" type="test" />
<!-- END_INCLUDE(neo4j:createRelationship) -->
<!-- BEGIN_INCLUDE(neo4j:createRelationship-withProperties) -->
<neo4j:create-relationship fromNode-ref="#[sourceNode]" toNode-ref="#[targetNode]" type="test">
    <neo4j:properties>
        <neo4j:property key="foo">bar</neo4j:property>
    </neo4j:properties>
</neo4j:create-relationship>
<!-- END_INCLUDE(neo4j:createRelationship-withProperties) -->

<!-- BEGIN_INCLUDE(neo4j:deleteRelationshipById) -->
<neo4j:delete-relationship-by-id relationshipId="1" />
<!-- END_INCLUDE(neo4j:deleteRelationshipById) -->
<!-- BEGIN_INCLUDE(neo4j:deleteRelationshipById-failIfNotFound) -->
<neo4j:delete-relationship-by-id relationshipId="1" failIfNotFound="true" />
<!-- END_INCLUDE(neo4j:deleteRelationshipById-failIfNotFound) -->

<!-- BEGIN_INCLUDE(neo4j:deleteRelationship) -->
<neo4j:delete-relationship relationship-ref="#[myRelationship]" />
<!-- END_INCLUDE(neo4j:deleteRelationship) -->
<!-- BEGIN_INCLUDE(neo4j:deleteRelationship-failIfNotFound) -->
<neo4j:delete-relationship relationship-ref="#[myRelationship]" failIfNotFound="true" />
<!-- END_INCLUDE(neo4j:deleteRelationship-failIfNotFound) -->

<!-- BEGIN_INCLUDE(neo4j:getNodeRelationships) -->
<neo4j:get-node-relationships node-ref="#[aNode]" direction="ALL" />
<!-- END_INCLUDE(neo4j:getNodeRelationships) -->
<!-- BEGIN_INCLUDE(neo4j:getNodeRelationships-singleType) -->
<neo4j:get-node-relationships node-ref="#[aNode]"
    direction="OUTGOING">
    <neo4j:types>
        <neo4j:type>likes</neo4j:type>
    </neo4j:types>
</neo4j:get-node-relationships>
<!-- END_INCLUDE(neo4j:getNodeRelationships-singleType) -->
<!-- BEGIN_INCLUDE(neo4j:getNodeRelationships-multipleTypes) -->
<neo4j:get-node-relationships node-ref="#[aNode]"
    direction="INCOMING">
    <neo4j:types>
        <neo4j:type>loves</neo4j:type>
        <neo4j:type>hates</neo4j:type>
    </neo4j:types>
</neo4j:get-node-relationships>
<!-- END_INCLUDE(neo4j:getNodeRelationships-multipleTypes) -->

<!-- BEGIN_INCLUDE(neo4j:setRelationshipProperties) -->
<neo4j:set-relationship-properties relationship-ref="#[aRelationship]">
    <neo4j:properties>
        <neo4j:property key="pi" value-ref="#[Math.PI]" />
        <neo4j:property key="chords">EADGBE</neo4j:property>
    </neo4j:properties>
</neo4j:set-relationship-properties>
<!-- END_INCLUDE(neo4j:setRelationshipProperties) -->
<!-- BEGIN_INCLUDE(neo4j:setRelationshipProperty) -->
<neo4j:set-relationship-property relationship-ref="#[aRelationship]"
       key="pi" value-ref="#[Math.PI]" />
<!-- END_INCLUDE(neo4j:setRelationshipProperty) -->

<!-- BEGIN_INCLUDE(neo4j:getRelationshipTypes) -->
<neo4j:get-relationship-types />
<!-- END_INCLUDE(neo4j:getRelationshipTypes) -->
